name: CI/CD to EC2 (Docker + GHCR)

on:
  push:
    branches: ["main"]

permissions:
  contents: read
  packages: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Prepare image name & tags
        run: |
          echo "IMAGE=ghcr.io/${{ github.repository }}" >> $GITHUB_ENV
          echo "TAG=${{ github.sha }}" >> $GITHUB_ENV

      - name: Build and push image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ env.IMAGE }}:${{ env.TAG }}
            ${{ env.IMAGE }}:latest

      - name: Validate required secrets exist
        run: |
          test -n "${{ secrets.EC2_HOST }}" || (echo "Missing EC2_HOST" && exit 1)
          test -n "${{ secrets.EC2_USER }}" || (echo "Missing EC2_USER" && exit 1)
          test -n "${{ secrets.EC2_SSH_KEY }}" || (echo "Missing EC2_SSH_KEY" && exit 1)
          test -n "${{ secrets.GHCR_USERNAME }}" || (echo "Missing GHCR_USERNAME" && exit 1)
          test -n "${{ secrets.GHCR_PAT }}" || (echo "Missing GHCR_PAT" && exit 1)

      - name: Write SSH private key to file
        shell: bash
        run: |
          cat > key.pem <<'EOF'
          ${{ secrets.EC2_SSH_KEY }}
          EOF
          sed -i 's/\r$//' key.pem
          chmod 600 key.pem

      - name: Copy deploy files to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key_path: key.pem
          source: "deploy/*"
          target: "/srv/myapp"

      - name: Deploy on server
        uses: appleboy/ssh-action@v1.0.3
        env:
          IMAGE: ${{ env.IMAGE }}
          GHCR_USERNAME: ${{ secrets.GHCR_USERNAME }}
          GHCR_PAT: ${{ secrets.GHCR_PAT }}
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key_path: key.pem
          envs: IMAGE,GHCR_USERNAME,GHCR_PAT
          script: |
            set -euo pipefail
            sudo mkdir -p /srv/myapp
            cd /srv/myapp

            # Install Docker if missing
            if ! command -v docker >/dev/null 2>&1; then
              curl -fsSL https://get.docker.com | sh
              sudo usermod -aG docker $USER || true
            fi

            # Install Docker Compose v2 if missing
            if ! docker compose version >/dev/null 2>&1; then
              DEST="$HOME/.docker/cli-plugins"
              mkdir -p "$DEST"
              curl -SL https://github.com/docker/compose/releases/download/v2.29.2/docker-compose-linux-x86_64 -o "$DEST/docker-compose"
              chmod +x "$DEST/docker-compose"
            fi

            # Login to GHCR (server-side) to pull private image
            echo "$GHCR_PAT" | docker login ghcr.io -u "$GHCR_USERNAME" --password-stdin

            # Inject image and deploy
            sed -i "s|IMAGE_PLACEHOLDER|$IMAGE:latest|g" docker-compose.yml
            docker compose pull
            docker compose up -d

            # Clean up unused layers
            docker system prune -f
